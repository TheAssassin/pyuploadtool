name: Continuous release

on: [push, pull_request]

jobs:
  qa:
    name: Quality Assurance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python3 -m pip install poetry
          python3 -m poetry install
      - name: Check code formatting with black
        run: python3 -m poetry run black --check pyuploadtool/

  build-appimage:
    name: Build AppImage
    needs:
      - qa
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build AppImage
        run: |
            wget https://github.com/TheAssassin/appimagecraft/releases/download/continuous/appimagecraft-x86_64.AppImage
            chmod +x appimagecraft-x86_64.AppImage
            ./appimagecraft-x86_64.AppImage
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: AppImage
          path: pyuploadtool*.AppImage*

  upload:
    name: Create release and upload artifacts
    needs:
      - build-appimage
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            cd AppImage
            chmod +x pyuploadtool-x86_64.AppImage
            ./pyuploadtool-x86_64.AppImage pyuploadtool-x86_64.AppImage
